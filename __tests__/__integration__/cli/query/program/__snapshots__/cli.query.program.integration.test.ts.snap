// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ims query program should display the query program help 1`] = `
"===============IMS QUERY PROGRAM HELP===============

 COMMAND NAME
 ------------

   program | pgm

 DESCRIPTION
 -----------

   Query an IMS application program.

 USAGE
 -----

   bright ims query program [names...] [options]

 POSITIONAL ARGUMENTS
 --------------------

   names...		 (string)

      Specifies the names of the programs to query.

 OPTIONS
 -------

   --attributes  | --att (array)

      Specifies the application program output fields to return.

      Default value: ALL
      Allowed values: ALL, BMPTYPE, DEFN, DEFNTYPE, DOPT, FP, GLOBAL, IMSID, GPSB,
      LANG, LOCAL, MODEL, RESIDENT, SCHDTYPE, STATUS, TIMESTAMP, TRANSTAT,
      EXPORTNEEDED, DB, RTC, TRAN, WORK

   --status  | --st (array)

      Selects programs for display that possess at least one of the specified program
      statuses.

      Allowed values: DB-NOTAVL, IOPREV, LOCK, NOTINIT, STOSCHD, TRACE

   --route  | --rt (array)

      Specifies the routes to return.

 IMS CONNECTION OPTIONS
 ----------------------

   --host  | -H (string)

      The IMS Command Services server host name.

   --port  | -P (number)

      The IMS Command Services server port.

   --ims-connect-host  | --ich (string)

      The hostname of your instance of IMS Connect. This is typically the hostname of
      the mainframe LPAR where IMS Connect is running.

   --ims-connect-port  | --icp (number)

      The port of your instance of IMS Connect. This port can be found in your IMS
      Connect configuration file on the mainframe.

   --plex  | -x (string)

      The name of the IMS plex.

   --user  | -u (string)

      Mainframe (IMS) user name, which can be the same as your TSO login.

   --password  | --pass (string)

      Mainframe (IMS) password, which can be the same as your TSO password.

 PROFILE OPTIONS
 ---------------

   --ims-profile  | --ims-p (string)

      The name of a (ims) profile to load for this command execution.

 RESPONSE FORMAT OPTIONS
 -----------------------

   --response-format-filter  | --rff (array)

      Filter (include) fields in the response. Accepts an array of field/property
      names to include in the output response. You can filter JSON objects properties
      OR table columns/fields. In addition, you can use this option in conjunction
      with '--response-format-type' to reduce the output of a command to a single
      field/property or a list of a single field/property.

   --response-format-type  | --rft (string)

      The command response output format type. Must be one of the following:

      table: Formats output data as a table. Use this option when the output data is
      an array of homogeneous JSON objects. Each property of the object will become a
      column in the table.

      list: Formats output data as a list of strings. Can be used on any data type
      (JSON objects/arrays) are stringified and a new line is added after each entry
      in an array.

      object: Formats output data as a list of prettified objects (or single object).
      Can be used in place of \\"table\\" to change from tabular output to a list of
      prettified objects.

      string: Formats output data as a string. JSON objects/arrays are stringified.

      Allowed values: table, list, object, string

   --response-format-header  | --rfh (boolean)

      If \\"--response-format-type table\\" is specified, include the column headers in
      the output.

 GLOBAL OPTIONS
 --------------

   --response-format-json  | --rfj (boolean)

      Produce JSON formatted data from a command

   --help  | -h (boolean)

      Display help text


 EXAMPLES
 --------

   - Query information for an application program named PGM123:

      $ bright ims query program PGM123

   - Query information for application programs named ABC and
   XYZ:

      $ bright ims query program ABC XYZ

   - Query information for application programs starting with
   PROG using the wild card character '*':

      $ bright ims query program PROG*

   - Query information for all application programs (default is
   all):

      $ bright ims query program 

   - Query information for all application programs specifying
   optional parameters:

      $ bright ims query program --attributes BMPTYPE TIMESTAMP --status NOTINIT --route IMS1 IMS2

   - Query information for all application programs specifying
   optional connection parameters:

      $ bright ims query program --host localhost --port 8080 --ich zos1 --icp 9999 --plex PLEX1

"
`;
